version: '3.7'

x-web_app: &web_app
  build:
    context: ./
    target: dev
    args:
      STATIC_URL: '/static/'
  environment:
    AWS_ACCESS_KEY: &aws_access_key AKIASLU4G3SBYZALV6OK
    AWS_SECRET_KEY: &aws_secret_key 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
    CELERY_BROKER_URL:  &celery_broker "sqs://AKIASLU4G3SBYZALV6OK:Xg6kFjgi6WMX1y9xivNH4YlI3dD3%2FOv%2BstmCAw2k@"
    # CELERY_BROKER_URL:  &celery_broker "https://sqs.eu-central-1.amazonaws.com/162462620803/celery_queue"
    CELERY_RESULT_BACKEND: redis://redis:6379/0
    # CELERY_BROKER_URL: &celery_broker redis://redis:6379/0
  depends_on:
    - redis
  volumes:
    - .:/app

services:
  web:
    <<: *web_app
    depends_on:
      - db
    ports:
      - 8000:8000  # django
      - 5678:5678  # debuger's port
  db:
    image: postgres:12.0-alpine
    volumes:
      - dm_postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=django_user
      - POSTGRES_PASSWORD=django_pass
      - POSTGRES_DB=django_movie_dev

  redis:
    image: library/redis:5.0-alpine
    ports:
      - 6379:6379
    restart: unless-stopped
    volumes:
      - dj_project-redis:/data

  worker:
    <<: *web_app
    command: celery --app=dj_project worker --loglevel=info
    restart: unless-stopped

  flower:
    build:
      dockerfile: flower_dockerfile
      context: ./
    environment:
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      CELERY_BROKER_URL: *celery_broker
    command: celery flower -A dj_project --address=0.0.0.0 --port=5555
    # command: celery flower -A dj_project --address=0.0.0.0 --port=5555 --broker=sqs://AKIASLU4G3SBYZALV6OK:Xg6kFjgi6WMX1y9xivNH4YlI3dD3%2FOv%2BstmCAw2k@
    # command: flower --address=0.0.0.0 --port=5555 --broker=redis://redis:6379/0
    # command: flower --address=0.0.0.0 --port=5555 --broker=sqs://AKIASLU4G3SBYZALV6OK:Xg6kFjgi6WMX1y9xivNH4YlI3dD3%2FOv%2BstmCAw2k@
    ports:
      - 5555:5555
    restart: unless-stopped
    volumes:
      - .:/app
volumes:
  dm_postgres_data:
  dj_project-redis:
